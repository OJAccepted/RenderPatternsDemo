{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/Desktop/backup/other/49kyir/src/index.js\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport getApp from \"./App\";\n\n// Our app component tree looks like this:\n// - App\n//    - Sidebar\n//    - Content\n//\n// Our initial HTML contains them all.\n// However, on the client, we'll load their code piece by piece.\n//\n// The point of this demo is to show that in Concurrent Mode,\n// React can make Sidebar/Content interactive the moment their\n// code arrives--without waiting for the whole JS bundle to load.\n\n// Do a full server render to fill the HTML.\ndoServerRender();\n\n// Start hydration as soon as we have the App component.\n// Note this doesn't *need* Sidebar or Content code to load yet.\n\nfunction doServerRender() {\n  var App = getApp(\n  // Pretend we're on the server, and have all the code\n  // to render the app (including Content and Sidebar).\n  false);\n  var rootElement = document.getElementById(\"root\");\n  // Just fill the initial HTML. As if it's server rendered.\n  rootElement.innerHTML = ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 57\n    }\n  }));\n}","map":{"version":3,"names":["React","ReactDOMServer","getApp","doServerRender","App","rootElement","document","getElementById","innerHTML","renderToString"],"sources":["/Users/bytedance/Desktop/backup/other/49kyir/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport getApp from \"./App\";\n\n// Our app component tree looks like this:\n// - App\n//    - Sidebar\n//    - Content\n//\n// Our initial HTML contains them all.\n// However, on the client, we'll load their code piece by piece.\n//\n// The point of this demo is to show that in Concurrent Mode,\n// React can make Sidebar/Content interactive the moment their\n// code arrives--without waiting for the whole JS bundle to load.\n\n// Do a full server render to fill the HTML.\ndoServerRender();\n\n// Start hydration as soon as we have the App component.\n// Note this doesn't *need* Sidebar or Content code to load yet.\n\nfunction doServerRender() {\n  const App = getApp(\n    // Pretend we're on the server, and have all the code\n    // to render the app (including Content and Sidebar).\n    false\n  );\n  const rootElement = document.getElementById(\"root\");\n  // Just fill the initial HTML. As if it's server rendered.\n  rootElement.innerHTML = ReactDOMServer.renderToString(<App />);\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,OAAO;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,cAAc,EAAE;;AAEhB;AACA;;AAEA,SAASA,cAAc,GAAG;EACxB,IAAMC,GAAG,GAAGF,MAAM;EAChB;EACA;EACA,KAAK,CACN;EACD,IAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACnD;EACAF,WAAW,CAACG,SAAS,GAAGP,cAAc,CAACQ,cAAc,eAAC,oBAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAAC;AAChE"},"metadata":{},"sourceType":"module"}